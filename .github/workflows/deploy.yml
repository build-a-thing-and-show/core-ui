name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # Checkout code
    - name: Checkout code
      uses: actions/checkout@v3

    # Set up Node.js
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 23

    # Install dependencies
    - name: Install dependencies
      run: npm install

    # Run eslint
    - name: Run eslint
      run: npm run lint
    
    # Run tests
    - name: Run tests
      run: npm run test

    # Authenticate with ECR
    - name: Login to ECR
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Authenticate Docker with ECR
      run: |
        aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.ECR_REPOSITORY_URL }}

    - name: Build and tag the Docker image
      run: |
        docker build -t ${{ secrets.ECR_REPOSITORY_URL }}:latest .

    - name: Push Docker image to ECR
      run: |
        docker push ${{ secrets.ECR_REPOSITORY_URL }}:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code (to get Helm chart if it's in this repo)
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Update kubeconfig for EKS
        run: aws eks update-kubeconfig --region ${{ secrets.AWS_REGION }} --name eks_cluster

      - name: Install Helm
        uses: azure/setup-helm@v3

      - name: Deploy core-ui with Helm
        run: |
          helm upgrade --install core-ui https://github.com/build-a-thing-and-show/infrastructure/raw/main/deployments/helm/core-ui \
            --namespace default \
            --set image.repository=${{ secrets.ECR_REPOSITORY_URL }} \
            --set image.tag=latest
